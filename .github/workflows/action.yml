name: Run Django testing w/ coverage

on:
  pull_request:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "master", "main" ]

permissions:
  pull-requests: write
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
      postgres:
        image: postgres:12
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres

    env:
      DJANGO_SETTINGS_MODULE: "ParanuaraAPI.settings"
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - uses: actions/cache@v3
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run migrations  
      run: python manage.py migrate
    - name: Run static checks  
      run: pre-commit run --all-file
    - name: Run type checks  
      run: mypy --install-types information/
    - name: Run tests
      run: pytest . --cov . --cov-report html --cov-report xml --cov-report term
    - name: Upload HTML coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: htmlcov
    - name: Upload coverage report to codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: coverage.xml
        flags: unittests # optional
        name: codecov-umbrella # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)
    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      # uses: joshjohanning/CodeCoverageSummary@v1.0.2
      with:
        filename: coverage.xml
        badge: true
        format: 'markdown'
        output: 'both'
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

  dependabot:
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.6.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
